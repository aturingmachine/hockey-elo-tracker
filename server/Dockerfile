FROM openjdk:8-jdk-alpine
VOLUME /tmp
RUN mkdir /elo-tracker
COPY . /elo-tracker
WORKDIR /elo-tracker

ARG ELO_TRACKER_DB_USERNAME
ENV ELO_TRACKER_DB_USERNAME ${ELO_TRACKER_DB_USERNAME:-username}

ARG ELO_TRACKER_DB_PASSWORD
ENV ELO_TRACKER_DB_PASSWORD ${ELO_TRACKER_DB_PASSWORD:-password}

ARG ELO_TRACKER_DB_NAME
ENV ELO_TRACKER_DB_NAME ${ELO_TRACKER_DB_NAME:-dbName}

ARG ELO_TRACKER_INSTANCE_CONNECTION_NAME
ENV ELO_TRACKER_INSTANCE_CONNECTION_NAME ${ELO_TRACKER_INSTANCE_CONNECTION_NAME:-instanceConnectionName}

ARG ELO_TRACKER_GCP_PROJECT_ID
ENV ELO_TRACKER_GCP_PROJECT_ID ${ELO_TRACKER_GCP_PROJECT_ID:-projectId}

ARG ELO_TRACKER_CREDENTIALS_LOCATION
ENV ELO_TRACKER_CREDENTIALS_LOCATION ${ELO_TRACKER_CREDENTIALS_LOCATION:-credentialLocation}

RUN /elo-tracker/gradlew build -x test
RUN mv /elo-tracker/build/libs/*.jar /elo-tracker/app.jar
ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/./urandom", "-Dspring.profiles.active=gcp", "-jar", "/elo-tracker/app.jar"]

# docker build --no-cache -t elo-tracker-dev .
# docker run -it --rm /
# -e ELO_TRACKER_DB_USERNAME=${ELO_TRACKER_DB_USERNAME} /
# -e ELO_TRACKER_DB_PASSWORD=${ELO_TRACKER_DB_PASSWORD}/
# -e ELO_TRACKER_DB_NAME=${ELO_TRACKER_DB_NAME}
# -e ELO_TRACKER_INSTANCE_CONNECTION_NAME=${ELO_TRACKER_INSTANCE_CONNECTION_NAME}
# -e ELO_TRACKER_GCP_PROJECT_ID=${ELO_TRACKER_GCP_PROJECT_ID}
# -e ELO_TRACKER_CREDENTIALS_LOCATION=${ELO_TRACKER_CREDENTIALS_LOCATION}
# -p 8080:8080 elo-tracker-local
